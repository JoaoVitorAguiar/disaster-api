// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  admin
  client
}

enum CampaignStatus {
  active
  completed
  pending
  cancelled
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  role      Role     @default(client)
  cpf       String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  addresses Address[] @relation()
  occurrences Occurrence[]

  @@map("users")
}

model Address {
  id        String    @id @default(uuid())
  street    String
  city      String
  state     String
  country   String
  zipCode   String
  userId    String
  user      User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum CategoryStatus {
  active
  pending
  inactive
}

model Category {
  id          String         @id @default(uuid())
  name        String
  status      CategoryStatus @default(active)
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
  occurrences Occurrence[]

  @@map("categories")
}

enum OccurrenceStatus {
  pending
  completed
}

model Occurrence {
  id          String           @id @default(uuid())
  title       String
  description String
  status      OccurrenceStatus @default(pending)
  files       String[]
  zipCode     String
  latitude    Float
  longitude   Float
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
  user        User             @relation(fields: [userId], references: [id])
  userId      String
  category    Category         @relation(fields: [categoryId], references: [id])
  categoryId  String

  @@map("occurrences")
}

model Campaign {
  id           String         @id @default(uuid())
  name         String
  description  String
  goalAmount   Float?         @default(0)
  raisedAmount Float?         @default(0)
  startDate    DateTime
  endDate      DateTime
  status       CampaignStatus @default(active)
  latitude     Float          @default(0.0)
  longitude    Float          @default(0.0)
  qrCode       String         @default("")
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt

  @@map("campaigns")
}
